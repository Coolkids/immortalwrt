
name: OpenWrt-IMQ-releases-CI

on:
  push:
    tags:
      - 'v*'

jobs:

  build_openwrt:

    name: Build x86_64 OpenWrt IMQ releases firmware

    runs-on: ubuntu-22.04

    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Set workspace
        run: |
          sudo mkdir -p -m 777 /mnt/openwrt
          echo "WORK_PATH=/mnt/openwrt" >> $GITHUB_ENV
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
      
      - name: Set variables
        run: |
          sudo -E timedatectl set-timezone Asia/Shanghai

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
          libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
          nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
          python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev yasm
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          df -h
          
      - name: Move Build Path
        run: |
          cp -a ./. ${{ env.WORK_PATH }}
          
      - name: Update feeds
        working-directory: ${{ env.WORK_PATH }}
        run: |
          ./tool.sh feed

      - name: Generate configuration file
        working-directory: ${{ env.WORK_PATH }}
        run: |
          rm -f ./.config*
          sed -i 's/-SNAPSHOT//g' ./include/version.mk
          cp ./configs/x86-nginx.config ./.config
          make defconfig

      - name: Make download
        working-directory: ${{ env.WORK_PATH }}
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        working-directory: ${{ env.WORK_PATH }}
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Clean Build Files
        working-directory: ${{ env.WORK_PATH }}
        run: |
          rm -rf ./staging_dir
          rm -rf ./build_dir

      - name: Prepare artifact
        working-directory: ${{ env.WORK_PATH }}
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f -name "immortalwrt-*") ./artifact/firmware/
          cp -rf $(find ./bin/targets/ -type f -name "sha256sums") ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          
      - name: Clean Bin Files
        working-directory: ${{ env.WORK_PATH }}
        run: |
          rm -rf ./bin

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ${{ env.WORK_PATH }}/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ${{ env.WORK_PATH }}/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ${{ env.WORK_PATH }}/artifact/firmware/

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.RELEASE_TOKEN }}
          file: ${{ env.WORK_PATH }}/artifact/firmware/*
          overwrite: true
          release_name: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          file_glob: true
          body: |
             Changes since the last release can be found at: https://github.com/${{ github.repository }}/compare/${{ steps.build.outputs.previous_tag }}...${{ steps.build.outputs.tag_name }} 

      - name: Delete loder releases
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 5
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Push Msg
        run: |
          sh .github/push.sh ${{ secrets.CORPID }} ${{ secrets.CORPSECRET }} ${{ secrets.AGENTID }} "x86_64" "Released on ${{ github.ref_name }}"









