
name: OpenWrt-dev-CI

on:
  push:
    branches: 
      - dev
  # tags:
  #   - 'v*'
  # schedule:
  #   - cron: 0 20 * * *
  #release:
  #  types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt dev firmware

    runs-on: ubuntu-22.04

    if: github.event.repository.owner.id == github.event.sender.id

    env:
      workspace: /mnt

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev
          path: ${{workspace}}
      
      - name: Set variables
        run: |
          sudo -E timedatectl set-timezone Asia/Shanghai

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
          sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install libfuse-dev $(curl -fsSL git.io/depends-ubuntu-2204)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          df -h

      - name: Update feeds
        run: |
          cd ${{workspace}}/immortalwrt
          ./tool.sh feed

      - name: Generate configuration file
        run: |
          cd ${{workspace}}/immortalwrt
          rm -f ./.config*
          cp .github/x86.config ./.config
          make defconfig

      - name: Make download
        run: |
          cd ${{workspace}}/immortalwrt
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
          
      - name: Compile firmware
        run: |
          cd ${{workspace}}/immortalwrt
          make -j$(nproc) || make -j1 V=s

      - name: Clean Build Files
        run: |
          cd ${{workspace}}/immortalwrt
          rm -rf ./staging_dir
          rm -rf ./build_dir

      - name: Prepare artifact
        run: |
          cd ${{workspace}}/immortalwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f -name "immortalwrt-*") ./artifact/firmware/
          cp -rf $(find ./bin/targets/ -type f -name "sha256sums") ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Clean Bin Files
        run: |
          cd ${{workspace}}/immortalwrt
          rm -rf ./bin

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ${{workspace}}/immortalwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ${{workspace}}/immortalwrt/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ${{workspace}}/immortalwrt/artifact/firmware/

      - name: Push Msg
        run: |
          cd ${{workspace}}/immortalwrt
          sh .github/push.sh ${{ secrets.CORPID }} ${{ secrets.CORPSECRET }} ${{ secrets.AGENTID }} "x86_64" "dev on ${{ github.ref_name }}"









